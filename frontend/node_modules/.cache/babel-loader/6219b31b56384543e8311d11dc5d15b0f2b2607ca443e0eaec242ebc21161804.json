{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport * as albumService from '../services/albumService'; // Добавляем импорт\n\n// Async actions\nexport const fetchAlbums = createAsyncThunk('albums/fetchAll', async (page = 1, {\n  rejectWithValue\n}) => {\n  try {\n    return await albumService.getAlbums(page);\n  } catch (error) {\n    var _error$response;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  }\n});\nexport const fetchAlbumDetails = createAsyncThunk('albums/fetchDetails', async (id, {\n  rejectWithValue\n}) => {\n  try {\n    return await albumService.getAlbumDetails(id);\n  } catch (error) {\n    var _error$response2;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n  }\n});\nexport const addNewAlbum = createAsyncThunk('albums/addNew', async (albumData, {\n  rejectWithValue\n}) => {\n  try {\n    return await albumService.createAlbum(albumData);\n  } catch (error) {\n    var _error$response3;\n    return rejectWithValue(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n  }\n});\nexport const modifyAlbum = createAsyncThunk('albums/update', async ({\n  id,\n  data\n}, {\n  rejectWithValue\n}) => {\n  try {\n    return await albumService.updateAlbum(id, data);\n  } catch (error) {\n    var _error$response4;\n    return rejectWithValue(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n  }\n});\nexport const fetchTopSellingAlbums = createAsyncThunk('albums/fetchTopSelling', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    return await albumService.getTopSellingAlbums();\n  } catch (error) {\n    var _error$response5;\n    return rejectWithValue(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n  }\n});\nexport const searchAlbumCatalog = createAsyncThunk('albums/search', async (query, {\n  rejectWithValue\n}) => {\n  try {\n    return await albumService.searchAlbums(query);\n  } catch (error) {\n    var _error$response6;\n    return rejectWithValue(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n  }\n});\n\n// Slice\nconst albumSlice = createSlice({\n  name: 'albums',\n  initialState: {\n    list: [],\n    currentAlbum: null,\n    searchResults: [],\n    topSelling: [],\n    status: 'idle',\n    error: null,\n    pagination: {}\n  },\n  reducers: {\n    clearCurrentAlbum: state => {\n      state.currentAlbum = null;\n    },\n    clearSearchResults: state => {\n      state.searchResults = [];\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchAlbums.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchAlbums.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.list = action.payload.data || [];\n      state.pagination = action.payload.pagination || {};\n    }).addCase(fetchAlbums.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    }).addCase(fetchAlbumDetails.fulfilled, (state, action) => {\n      state.currentAlbum = action.payload;\n    }).addCase(addNewAlbum.fulfilled, (state, action) => {\n      state.list.unshift(action.payload);\n    }).addCase(modifyAlbum.fulfilled, (state, action) => {\n      var _state$currentAlbum;\n      const index = state.list.findIndex(a => a.id === action.payload.id);\n      if (index !== -1) {\n        state.list[index] = action.payload;\n      }\n      if (((_state$currentAlbum = state.currentAlbum) === null || _state$currentAlbum === void 0 ? void 0 : _state$currentAlbum.id) === action.payload.id) {\n        state.currentAlbum = action.payload;\n      }\n    }).addCase(fetchTopSellingAlbums.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchTopSellingAlbums.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.topSelling = action.payload;\n    }).addCase(fetchTopSellingAlbums.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    }).addCase(searchAlbumCatalog.fulfilled, (state, action) => {\n      state.searchResults = action.payload;\n    });\n  }\n});\nexport const {\n  clearCurrentAlbum,\n  clearSearchResults\n} = albumSlice.actions;\nexport default albumSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","albumService","fetchAlbums","page","rejectWithValue","getAlbums","error","_error$response","response","data","message","fetchAlbumDetails","id","getAlbumDetails","_error$response2","addNewAlbum","albumData","createAlbum","_error$response3","modifyAlbum","updateAlbum","_error$response4","fetchTopSellingAlbums","_","getTopSellingAlbums","_error$response5","searchAlbumCatalog","query","searchAlbums","_error$response6","albumSlice","name","initialState","list","currentAlbum","searchResults","topSelling","status","pagination","reducers","clearCurrentAlbum","state","clearSearchResults","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","unshift","_state$currentAlbum","index","findIndex","a","actions","reducer"],"sources":["/Users/mak/musicShop/frontend/src/features/albumSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport * as albumService from '../services/albumService'; // Добавляем импорт\n\n// Async actions\nexport const fetchAlbums = createAsyncThunk(\n  'albums/fetchAll',\n  async (page = 1, { rejectWithValue }) => {\n    try {\n      return await albumService.getAlbums(page);\n    } catch (error) {\n      return rejectWithValue(error.response?.data || error.message);\n    }\n  }\n);\n\nexport const fetchAlbumDetails = createAsyncThunk(\n  'albums/fetchDetails',\n  async (id, { rejectWithValue }) => {\n    try {\n      return await albumService.getAlbumDetails(id);\n    } catch (error) {\n      return rejectWithValue(error.response?.data || error.message);\n    }\n  }\n);\n\nexport const addNewAlbum = createAsyncThunk(\n  'albums/addNew',\n  async (albumData, { rejectWithValue }) => {\n    try {\n      return await albumService.createAlbum(albumData);\n    } catch (error) {\n      return rejectWithValue(error.response?.data || error.message);\n    }\n  }\n);\n\nexport const modifyAlbum = createAsyncThunk(\n  'albums/update',\n  async ({ id, data }, { rejectWithValue }) => {\n    try {\n      return await albumService.updateAlbum(id, data);\n    } catch (error) {\n      return rejectWithValue(error.response?.data || error.message);\n    }\n  }\n);\n\nexport const fetchTopSellingAlbums = createAsyncThunk(\n  'albums/fetchTopSelling',\n  async (_, { rejectWithValue }) => {\n    try {\n      return await albumService.getTopSellingAlbums();\n    } catch (error) {\n      return rejectWithValue(error.response?.data || error.message);\n    }\n  }\n);\n\nexport const searchAlbumCatalog = createAsyncThunk(\n  'albums/search',\n  async (query, { rejectWithValue }) => {\n    try {\n      return await albumService.searchAlbums(query);\n    } catch (error) {\n      return rejectWithValue(error.response?.data || error.message);\n    }\n  }\n);\n\n// Slice\nconst albumSlice = createSlice({\n  name: 'albums',\n  initialState: {\n    list: [],\n    currentAlbum: null,\n    searchResults: [],\n    topSelling: [],\n    status: 'idle',\n    error: null,\n    pagination: {}\n  },\n  reducers: {\n    clearCurrentAlbum: (state) => {\n      state.currentAlbum = null;\n    },\n    clearSearchResults: (state) => {\n      state.searchResults = [];\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchAlbums.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchAlbums.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.list = action.payload.data || [];\n        state.pagination = action.payload.pagination || {};\n      })\n      .addCase(fetchAlbums.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.payload;\n      })\n      .addCase(fetchAlbumDetails.fulfilled, (state, action) => {\n        state.currentAlbum = action.payload;\n      })\n      .addCase(addNewAlbum.fulfilled, (state, action) => {\n        state.list.unshift(action.payload);\n      })\n      .addCase(modifyAlbum.fulfilled, (state, action) => {\n        const index = state.list.findIndex(a => a.id === action.payload.id);\n        if (index !== -1) {\n          state.list[index] = action.payload;\n        }\n        if (state.currentAlbum?.id === action.payload.id) {\n          state.currentAlbum = action.payload;\n        }\n      })\n      .addCase(fetchTopSellingAlbums.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchTopSellingAlbums.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.topSelling = action.payload;\n      })\n      .addCase(fetchTopSellingAlbums.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.payload;\n      })\n      .addCase(searchAlbumCatalog.fulfilled, (state, action) => {\n        state.searchResults = action.payload;\n      });\n  }\n});\n\nexport const { clearCurrentAlbum, clearSearchResults } = albumSlice.actions;\nexport default albumSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}