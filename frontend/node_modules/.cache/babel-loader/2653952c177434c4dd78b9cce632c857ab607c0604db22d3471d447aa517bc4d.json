{"ast":null,"code":"// src/features/labelSlice.js\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport api from '../api';\nexport const fetchLabels = createAsyncThunk('labels/fetchAll', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await api.get('/labels');\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  }\n});\nconst labelSlice = createSlice({\n  name: 'labels',\n  initialState: {\n    list: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchLabels.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchLabels.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.list = action.payload;\n    }).addCase(fetchLabels.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    });\n  }\n});\nexport default labelSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","api","fetchLabels","_","rejectWithValue","response","get","data","error","_error$response","message","labelSlice","name","initialState","list","status","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["/Users/mak/musicShop/frontend/src/features/labelSlice.js"],"sourcesContent":["// src/features/labelSlice.js\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport api from '../api';\n\nexport const fetchLabels = createAsyncThunk(\n  'labels/fetchAll',\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await api.get('/labels');\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response?.data || error.message);\n    }\n  }\n);\n\nconst labelSlice = createSlice({\n  name: 'labels',\n  initialState: {\n    list: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchLabels.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchLabels.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.list = action.payload;\n      })\n      .addCase(fetchLabels.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.payload;\n      });\n  }\n});\n\nexport default labelSlice.reducer;"],"mappings":"AAAA;AACA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,GAAG,MAAM,QAAQ;AAExB,OAAO,MAAMC,WAAW,GAAGH,gBAAgB,CACzC,iBAAiB,EACjB,OAAOI,CAAC,EAAE;EAAEC;AAAgB,CAAC,KAAK;EAChC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,SAAS,CAAC;IACzC,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACd,OAAOL,eAAe,CAAC,EAAAK,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACE,OAAO,CAAC;EAC/D;AACF,CACF,CAAC;AAED,MAAMC,UAAU,GAAGX,WAAW,CAAC;EAC7BY,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE,MAAM;IACdP,KAAK,EAAE;EACT,CAAC;EACDQ,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACjB,WAAW,CAACkB,OAAO,EAAGC,KAAK,IAAK;MACvCA,KAAK,CAACN,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDI,OAAO,CAACjB,WAAW,CAACoB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACjDF,KAAK,CAACN,MAAM,GAAG,WAAW;MAC1BM,KAAK,CAACP,IAAI,GAAGS,MAAM,CAACC,OAAO;IAC7B,CAAC,CAAC,CACDL,OAAO,CAACjB,WAAW,CAACuB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAChDF,KAAK,CAACN,MAAM,GAAG,QAAQ;MACvBM,KAAK,CAACb,KAAK,GAAGe,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeb,UAAU,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}