{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: '/api',\n  // Корректный базовый URL\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Перехватчик запросов\napi.interceptors.request.use(config => {\n  console.log(`Request: ${config.method.toUpperCase()} ${config.url}`);\n  return config;\n});\n\n// Перехватчик ошибок\napi.interceptors.response.use(response => response, error => {\n  var _error$config, _error$response;\n  let message = 'Network error';\n  if (error.response) {\n    var _error$response$data;\n    message = `API Error: ${error.response.status} - ${((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Unknown error'}`;\n  } else if (error.request) {\n    message = 'No response from server';\n  }\n  console.error('API Error:', {\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    message\n  });\n  return Promise.reject(message);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","timeout","headers","interceptors","request","use","config","console","log","method","toUpperCase","url","response","error","_error$config","_error$response","message","_error$response$data","status","data","Promise","reject"],"sources":["/Users/mak/musicShop/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: '/api', // Корректный базовый URL\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Перехватчик запросов\napi.interceptors.request.use(config => {\n  console.log(`Request: ${config.method.toUpperCase()} ${config.url}`);\n  return config;\n});\n\n// Перехватчик ошибок\napi.interceptors.response.use(\n  response => response,\n  error => {\n    let message = 'Network error';\n    \n    if (error.response) {\n      message = `API Error: ${error.response.status} - ${error.response.data?.error || 'Unknown error'}`;\n    } else if (error.request) {\n      message = 'No response from server';\n    }\n    \n    console.error('API Error:', {\n      url: error.config?.url,\n      status: error.response?.status,\n      message\n    });\n    \n    return Promise.reject(message);\n  }\n);\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,MAAM;EAAE;EACjBC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACrCC,OAAO,CAACC,GAAG,CAAC,YAAYF,MAAM,CAACG,MAAM,CAACC,WAAW,CAAC,CAAC,IAAIJ,MAAM,CAACK,GAAG,EAAE,CAAC;EACpE,OAAOL,MAAM;AACf,CAAC,CAAC;;AAEF;AACAR,GAAG,CAACK,YAAY,CAACS,QAAQ,CAACP,GAAG,CAC3BO,QAAQ,IAAIA,QAAQ,EACpBC,KAAK,IAAI;EAAA,IAAAC,aAAA,EAAAC,eAAA;EACP,IAAIC,OAAO,GAAG,eAAe;EAE7B,IAAIH,KAAK,CAACD,QAAQ,EAAE;IAAA,IAAAK,oBAAA;IAClBD,OAAO,GAAG,cAAcH,KAAK,CAACD,QAAQ,CAACM,MAAM,MAAM,EAAAD,oBAAA,GAAAJ,KAAK,CAACD,QAAQ,CAACO,IAAI,cAAAF,oBAAA,uBAAnBA,oBAAA,CAAqBJ,KAAK,KAAI,eAAe,EAAE;EACpG,CAAC,MAAM,IAAIA,KAAK,CAACT,OAAO,EAAE;IACxBY,OAAO,GAAG,yBAAyB;EACrC;EAEAT,OAAO,CAACM,KAAK,CAAC,YAAY,EAAE;IAC1BF,GAAG,GAAAG,aAAA,GAAED,KAAK,CAACP,MAAM,cAAAQ,aAAA,uBAAZA,aAAA,CAAcH,GAAG;IACtBO,MAAM,GAAAH,eAAA,GAAEF,KAAK,CAACD,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBG,MAAM;IAC9BF;EACF,CAAC,CAAC;EAEF,OAAOI,OAAO,CAACC,MAAM,CAACL,OAAO,CAAC;AAChC,CACF,CAAC;AAED,eAAelB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}