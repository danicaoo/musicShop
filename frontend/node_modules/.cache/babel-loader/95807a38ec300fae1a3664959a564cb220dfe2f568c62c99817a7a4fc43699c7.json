{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport * as musicianService from '../services/musicianService';\nexport const fetchMusicians = createAsyncThunk('musicians/fetchAll', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    return await musicianService.getAllMusicians();\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message);\n  }\n});\nexport const fetchMusicianDetails = createAsyncThunk('musicians/fetchDetails', async (id, {\n  rejectWithValue\n}) => {\n  try {\n    return await musicianService.getMusicianById(id);\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || error.message);\n  }\n});\nexport const addNewMusician = createAsyncThunk('musicians/addNew', async (musicianData, {\n  rejectWithValue\n}) => {\n  try {\n    return await musicianService.createMusician(musicianData);\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    return rejectWithValue(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || error.message);\n  }\n});\nexport const modifyMusician = createAsyncThunk('musicians/update', async ({\n  id,\n  data\n}, {\n  rejectWithValue\n}) => {\n  try {\n    return await musicianService.updateMusician(id, data);\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    return rejectWithValue(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || error.message);\n  }\n});\nexport const searchMusicianCatalog = createAsyncThunk('musicians/search', async (query, {\n  rejectWithValue\n}) => {\n  try {\n    return await musicianService.searchMusicians(query);\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n    return rejectWithValue(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || error.message);\n  }\n});\nconst musicianSlice = createSlice({\n  name: 'musicians',\n  initialState: {\n    list: [],\n    currentMusician: null,\n    searchResults: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    clearCurrentMusician: state => {\n      state.currentMusician = null;\n    },\n    clearSearchResults: state => {\n      state.searchResults = [];\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Обработчики для fetchMusicians\n    .addCase(fetchMusicians.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchMusicians.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.list = action.payload;\n    }).addCase(fetchMusicians.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    })\n\n    // Обработчики для fetchMusicianDetails\n    .addCase(fetchMusicianDetails.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchMusicianDetails.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.currentMusician = action.payload;\n    }).addCase(fetchMusicianDetails.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    })\n\n    // Обработчики для addNewMusician\n    .addCase(addNewMusician.pending, state => {\n      state.status = 'loading';\n    }).addCase(addNewMusician.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.list.push(action.payload);\n    }).addCase(addNewMusician.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    })\n\n    // Обработчики для modifyMusician\n    .addCase(modifyMusician.pending, state => {\n      state.status = 'loading';\n    }).addCase(modifyMusician.fulfilled, (state, action) => {\n      var _state$currentMusicia;\n      state.status = 'succeeded';\n      const index = state.list.findIndex(m => m.id === action.payload.id);\n      if (index !== -1) {\n        state.list[index] = action.payload;\n      }\n      if (((_state$currentMusicia = state.currentMusician) === null || _state$currentMusicia === void 0 ? void 0 : _state$currentMusicia.id) === action.payload.id) {\n        state.currentMusician = action.payload;\n      }\n    }).addCase(modifyMusician.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    })\n\n    // Обработчик для searchMusicianCatalog\n    .addCase(searchMusicianCatalog.fulfilled, (state, action) => {\n      state.searchResults = action.payload;\n    });\n  }\n});\nexport const {\n  clearCurrentMusician,\n  clearSearchResults\n} = musicianSlice.actions;\nexport default musicianSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","musicianService","fetchMusicians","_","rejectWithValue","getAllMusicians","error","_error$response","_error$response$data","response","data","message","fetchMusicianDetails","id","getMusicianById","_error$response2","_error$response2$data","addNewMusician","musicianData","createMusician","_error$response3","_error$response3$data","modifyMusician","updateMusician","_error$response4","_error$response4$data","searchMusicianCatalog","query","searchMusicians","_error$response5","_error$response5$data","musicianSlice","name","initialState","list","currentMusician","searchResults","status","reducers","clearCurrentMusician","state","clearSearchResults","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","push","_state$currentMusicia","index","findIndex","m","actions","reducer"],"sources":["/Users/mak/musicShop/frontend/src/features/musicianSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport * as musicianService from '../services/musicianService';\n\nexport const fetchMusicians = createAsyncThunk(\n  'musicians/fetchAll',\n  async (_, { rejectWithValue }) => {\n    try {\n      return await musicianService.getAllMusicians();\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.error || error.message);\n    }\n  }\n);\n\nexport const fetchMusicianDetails = createAsyncThunk(\n  'musicians/fetchDetails',\n  async (id, { rejectWithValue }) => {\n    try {\n      return await musicianService.getMusicianById(id);\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.error || error.message);\n    }\n  }\n);\n\nexport const addNewMusician = createAsyncThunk(\n  'musicians/addNew',\n  async (musicianData, { rejectWithValue }) => {\n    try {\n      return await musicianService.createMusician(musicianData);\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.error || error.message);\n    }\n  }\n);\n\nexport const modifyMusician = createAsyncThunk(\n  'musicians/update',\n  async ({ id, data }, { rejectWithValue }) => {\n    try {\n      return await musicianService.updateMusician(id, data);\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.error || error.message);\n    }\n  }\n);\n\nexport const searchMusicianCatalog = createAsyncThunk(\n  'musicians/search',\n  async (query, { rejectWithValue }) => {\n    try {\n      return await musicianService.searchMusicians(query);\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.error || error.message);\n    }\n  }\n);\n\nconst musicianSlice = createSlice({\n  name: 'musicians',\n  initialState: {\n    list: [],\n    currentMusician: null,\n    searchResults: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    clearCurrentMusician: (state) => {\n      state.currentMusician = null;\n    },\n    clearSearchResults: (state) => {\n      state.searchResults = [];\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      // Обработчики для fetchMusicians\n      .addCase(fetchMusicians.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchMusicians.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.list = action.payload;\n      })\n      .addCase(fetchMusicians.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.payload;\n      })\n      \n      // Обработчики для fetchMusicianDetails\n      .addCase(fetchMusicianDetails.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchMusicianDetails.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.currentMusician = action.payload;\n      })\n      .addCase(fetchMusicianDetails.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.payload;\n      })\n      \n      // Обработчики для addNewMusician\n      .addCase(addNewMusician.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(addNewMusician.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.list.push(action.payload);\n      })\n      .addCase(addNewMusician.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.payload;\n      })\n      \n      // Обработчики для modifyMusician\n      .addCase(modifyMusician.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(modifyMusician.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        const index = state.list.findIndex(m => m.id === action.payload.id);\n        if (index !== -1) {\n          state.list[index] = action.payload;\n        }\n        if (state.currentMusician?.id === action.payload.id) {\n          state.currentMusician = action.payload;\n        }\n      })\n      .addCase(modifyMusician.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.payload;\n      })\n      \n      // Обработчик для searchMusicianCatalog\n      .addCase(searchMusicianCatalog.fulfilled, (state, action) => {\n        state.searchResults = action.payload;\n      });\n  }\n});\n\nexport const { clearCurrentMusician, clearSearchResults } = musicianSlice.actions;\nexport default musicianSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}