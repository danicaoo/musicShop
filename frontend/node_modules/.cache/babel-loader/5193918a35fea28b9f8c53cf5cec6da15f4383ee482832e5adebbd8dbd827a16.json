{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios'; // Добавьте этот импорт\nimport { createMusician, updateMusician, getAllMusicians, getMusicianById, searchMusicians as apiSearchMusicians // Переименовали\n} from '../services/musicianService';\nexport const fetchMusicians = createAsyncThunk('musicians/fetchAll', async () => {\n  return await getAllMusicians();\n});\nexport const fetchMusicianDetails = createAsyncThunk('musicians/fetchDetails', async id => {\n  return await getMusicianById(id);\n});\nexport const addNewMusician = createAsyncThunk('musicians/addNew', async musicianData => {\n  return await createMusician(musicianData);\n});\nexport const modifyMusician = createAsyncThunk('musicians/update', async ({\n  id,\n  data\n}) => {\n  return await updateMusician(id, data);\n});\nexport const searchMusicianCatalog = createAsyncThunk('musicians/search', async query => {\n  const response = await axios.get(`/api/musicians/search?name=${query}`);\n  return response.data;\n});\nconst musicianSlice = createSlice({\n  name: 'musicians',\n  initialState: {\n    list: [],\n    currentMusician: null,\n    searchResults: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    clearCurrentMusician: state => {\n      state.currentMusician = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchMusicians.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchMusicians.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.list = action.payload;\n    }).addCase(fetchMusicians.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(fetchMusicianDetails.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchMusicianDetails.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.currentMusician = action.payload;\n    }).addCase(fetchMusicianDetails.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(addNewMusician.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.list.push(action.payload);\n    }).addCase(modifyMusician.fulfilled, (state, action) => {\n      var _state$currentMusicia;\n      state.status = 'succeeded';\n      const index = state.list.findIndex(m => m.id === action.payload.id);\n      if (index !== -1) {\n        state.list[index] = action.payload;\n      }\n      if (((_state$currentMusicia = state.currentMusician) === null || _state$currentMusicia === void 0 ? void 0 : _state$currentMusicia.id) === action.payload.id) {\n        state.currentMusician = action.payload;\n      }\n    }).addCase(searchMusicianCatalog.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.searchResults = action.payload;\n    });\n  }\n});\nexport const {\n  clearCurrentMusician\n} = musicianSlice.actions;\nexport default musicianSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","axios","createMusician","updateMusician","getAllMusicians","getMusicianById","searchMusicians","apiSearchMusicians","fetchMusicians","fetchMusicianDetails","id","addNewMusician","musicianData","modifyMusician","data","searchMusicianCatalog","query","response","get","musicianSlice","createSlice","name","initialState","list","currentMusician","searchResults","status","error","reducers","clearCurrentMusician","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","message","push","_state$currentMusicia","index","findIndex","m","actions","reducer"],"sources":["/Users/mak/musicShop/frontend/src/features/musicianSlice.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios'; // Добавьте этот импорт\nimport {\n  createMusician,\n  updateMusician,\n  getAllMusicians,\n  getMusicianById,\n  searchMusicians as apiSearchMusicians // Переименовали\n} from '../services/musicianService';\n\nexport const fetchMusicians = createAsyncThunk(\n  'musicians/fetchAll',\n  async () => {\n    return await getAllMusicians();\n  }\n);\n\nexport const fetchMusicianDetails = createAsyncThunk(\n  'musicians/fetchDetails',\n  async (id) => {\n    return await getMusicianById(id);\n  }\n);\n\nexport const addNewMusician = createAsyncThunk(\n  'musicians/addNew',\n  async (musicianData) => {\n    return await createMusician(musicianData);\n  }\n);\n\nexport const modifyMusician = createAsyncThunk(\n  'musicians/update',\n  async ({ id, data }) => {\n    return await updateMusician(id, data);\n  }\n);\n\nexport const searchMusicianCatalog = createAsyncThunk(\n  'musicians/search',\n  async (query) => {\n    const response = await axios.get(`/api/musicians/search?name=${query}`);\n    return response.data;\n  }\n);\n\nconst musicianSlice = createSlice({\n  name: 'musicians',\n  initialState: {\n    list: [],\n    currentMusician: null,\n    searchResults: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    clearCurrentMusician: (state) => {\n      state.currentMusician = null;\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchMusicians.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchMusicians.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.list = action.payload;\n      })\n      .addCase(fetchMusicians.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message;\n      })\n      .addCase(fetchMusicianDetails.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchMusicianDetails.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.currentMusician = action.payload;\n      })\n      .addCase(fetchMusicianDetails.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message;\n      })\n      .addCase(addNewMusician.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.list.push(action.payload);\n      })\n      .addCase(modifyMusician.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        const index = state.list.findIndex(m => m.id === action.payload.id);\n        if (index !== -1) {\n          state.list[index] = action.payload;\n        }\n        if (state.currentMusician?.id === action.payload.id) {\n          state.currentMusician = action.payload;\n        }\n      })\n      .addCase(searchMusicianCatalog.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.searchResults = action.payload;\n      });\n  }\n});\n\nexport const { clearCurrentMusician } = musicianSlice.actions;\nexport default musicianSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}