{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport api from '../api';\n\n// Async actions\nexport const fetchMusicians = createAsyncThunk('musicians/fetchAll', async () => {\n  const response = await api.get('/musicians');\n  return response.data;\n});\nexport const fetchMusicianDetails = createAsyncThunk('musicians/fetchDetails', async id => {\n  const response = await api.get(`/musicians/${id}`);\n  return response.data;\n});\nexport const addNewMusician = createAsyncThunk('musicians/addNew', async musicianData => {\n  const response = await api.post('/musicians', musicianData);\n  return response.data;\n});\nexport const modifyMusician = createAsyncThunk('musicians/update', async ({\n  id,\n  data\n}) => {\n  const response = await api.put(`/musicians/${id}`, data);\n  return response.data;\n});\nexport const searchMusicianCatalog = createAsyncThunk('musicians/search', async query => {\n  const response = await api.get('/musicians/search', {\n    params: {\n      name: query\n    }\n  });\n  return response.data;\n});\n\n// Slice\nconst musicianSlice = createSlice({\n  name: 'musicians',\n  initialState: {\n    list: [],\n    currentMusician: null,\n    searchResults: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    clearCurrentMusician: state => {\n      state.currentMusician = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchMusicians.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchMusicians.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.list = action.payload;\n    }).addCase(fetchMusicianDetails.fulfilled, (state, action) => {\n      state.currentMusician = action.payload;\n    }).addCase(addNewMusician.fulfilled, (state, action) => {\n      state.list.push(action.payload);\n    }).addCase(modifyMusician.fulfilled, (state, action) => {\n      var _state$currentMusicia;\n      const index = state.list.findIndex(m => m.id === action.payload.id);\n      if (index !== -1) {\n        state.list[index] = action.payload;\n      }\n      if (((_state$currentMusicia = state.currentMusician) === null || _state$currentMusicia === void 0 ? void 0 : _state$currentMusicia.id) === action.payload.id) {\n        state.currentMusician = action.payload;\n      }\n    }).addCase(searchMusicianCatalog.fulfilled, (state, action) => {\n      state.searchResults = action.payload;\n    }).addMatcher(action => action.type.endsWith('/rejected'), (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport const {\n  clearCurrentMusician\n} = musicianSlice.actions;\nexport default musicianSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","api","fetchMusicians","response","get","data","fetchMusicianDetails","id","addNewMusician","musicianData","post","modifyMusician","put","searchMusicianCatalog","query","params","name","musicianSlice","initialState","list","currentMusician","searchResults","status","error","reducers","clearCurrentMusician","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","push","_state$currentMusicia","index","findIndex","m","addMatcher","type","endsWith","message","actions","reducer"],"sources":["/Users/mak/musicShop/frontend/src/features/musicianSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport api from '../api';\n\n// Async actions\nexport const fetchMusicians = createAsyncThunk(\n  'musicians/fetchAll',\n  async () => {\n    const response = await api.get('/musicians');\n    return response.data;\n  }\n);\n\nexport const fetchMusicianDetails = createAsyncThunk(\n  'musicians/fetchDetails',\n  async (id) => {\n    const response = await api.get(`/musicians/${id}`);\n    return response.data;\n  }\n);\n\nexport const addNewMusician = createAsyncThunk(\n  'musicians/addNew',\n  async (musicianData) => {\n    const response = await api.post('/musicians', musicianData);\n    return response.data;\n  }\n);\n\nexport const modifyMusician = createAsyncThunk(\n  'musicians/update',\n  async ({ id, data }) => {\n    const response = await api.put(`/musicians/${id}`, data);\n    return response.data;\n  }\n);\n\nexport const searchMusicianCatalog = createAsyncThunk(\n  'musicians/search',\n  async (query) => {\n    const response = await api.get('/musicians/search', {\n      params: { name: query }\n    });\n    return response.data;\n  }\n);\n\n// Slice\nconst musicianSlice = createSlice({\n  name: 'musicians',\n  initialState: {\n    list: [],\n    currentMusician: null,\n    searchResults: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    clearCurrentMusician: (state) => {\n      state.currentMusician = null;\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchMusicians.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchMusicians.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.list = action.payload;\n      })\n      .addCase(fetchMusicianDetails.fulfilled, (state, action) => {\n        state.currentMusician = action.payload;\n      })\n      .addCase(addNewMusician.fulfilled, (state, action) => {\n        state.list.push(action.payload);\n      })\n      .addCase(modifyMusician.fulfilled, (state, action) => {\n        const index = state.list.findIndex(m => m.id === action.payload.id);\n        if (index !== -1) {\n          state.list[index] = action.payload;\n        }\n        if (state.currentMusician?.id === action.payload.id) {\n          state.currentMusician = action.payload;\n        }\n      })\n      .addCase(searchMusicianCatalog.fulfilled, (state, action) => {\n        state.searchResults = action.payload;\n      })\n      .addMatcher(\n        (action) => action.type.endsWith('/rejected'),\n        (state, action) => {\n          state.status = 'failed';\n          state.error = action.error.message;\n        }\n      );\n  }\n});\n\nexport const { clearCurrentMusician } = musicianSlice.actions;\nexport default musicianSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,GAAG,MAAM,QAAQ;;AAExB;AACA,OAAO,MAAMC,cAAc,GAAGH,gBAAgB,CAC5C,oBAAoB,EACpB,YAAY;EACV,MAAMI,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,YAAY,CAAC;EAC5C,OAAOD,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMC,oBAAoB,GAAGP,gBAAgB,CAClD,wBAAwB,EACxB,MAAOQ,EAAE,IAAK;EACZ,MAAMJ,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,cAAcG,EAAE,EAAE,CAAC;EAClD,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMG,cAAc,GAAGT,gBAAgB,CAC5C,kBAAkB,EAClB,MAAOU,YAAY,IAAK;EACtB,MAAMN,QAAQ,GAAG,MAAMF,GAAG,CAACS,IAAI,CAAC,YAAY,EAAED,YAAY,CAAC;EAC3D,OAAON,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMM,cAAc,GAAGZ,gBAAgB,CAC5C,kBAAkB,EAClB,OAAO;EAAEQ,EAAE;EAAEF;AAAK,CAAC,KAAK;EACtB,MAAMF,QAAQ,GAAG,MAAMF,GAAG,CAACW,GAAG,CAAC,cAAcL,EAAE,EAAE,EAAEF,IAAI,CAAC;EACxD,OAAOF,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMQ,qBAAqB,GAAGd,gBAAgB,CACnD,kBAAkB,EAClB,MAAOe,KAAK,IAAK;EACf,MAAMX,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,mBAAmB,EAAE;IAClDW,MAAM,EAAE;MAAEC,IAAI,EAAEF;IAAM;EACxB,CAAC,CAAC;EACF,OAAOX,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;;AAED;AACA,MAAMY,aAAa,GAAGjB,WAAW,CAAC;EAChCgB,IAAI,EAAE,WAAW;EACjBE,YAAY,EAAE;IACZC,IAAI,EAAE,EAAE;IACRC,eAAe,EAAE,IAAI;IACrBC,aAAa,EAAE,EAAE;IACjBC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,oBAAoB,EAAGC,KAAK,IAAK;MAC/BA,KAAK,CAACN,eAAe,GAAG,IAAI;IAC9B;EACF,CAAC;EACDO,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAC3B,cAAc,CAAC4B,OAAO,EAAGJ,KAAK,IAAK;MAC1CA,KAAK,CAACJ,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDO,OAAO,CAAC3B,cAAc,CAAC6B,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MACpDN,KAAK,CAACJ,MAAM,GAAG,WAAW;MAC1BI,KAAK,CAACP,IAAI,GAAGa,MAAM,CAACC,OAAO;IAC7B,CAAC,CAAC,CACDJ,OAAO,CAACvB,oBAAoB,CAACyB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAC1DN,KAAK,CAACN,eAAe,GAAGY,MAAM,CAACC,OAAO;IACxC,CAAC,CAAC,CACDJ,OAAO,CAACrB,cAAc,CAACuB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MACpDN,KAAK,CAACP,IAAI,CAACe,IAAI,CAACF,MAAM,CAACC,OAAO,CAAC;IACjC,CAAC,CAAC,CACDJ,OAAO,CAAClB,cAAc,CAACoB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAAA,IAAAG,qBAAA;MACpD,MAAMC,KAAK,GAAGV,KAAK,CAACP,IAAI,CAACkB,SAAS,CAACC,CAAC,IAAIA,CAAC,CAAC/B,EAAE,KAAKyB,MAAM,CAACC,OAAO,CAAC1B,EAAE,CAAC;MACnE,IAAI6B,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBV,KAAK,CAACP,IAAI,CAACiB,KAAK,CAAC,GAAGJ,MAAM,CAACC,OAAO;MACpC;MACA,IAAI,EAAAE,qBAAA,GAAAT,KAAK,CAACN,eAAe,cAAAe,qBAAA,uBAArBA,qBAAA,CAAuB5B,EAAE,MAAKyB,MAAM,CAACC,OAAO,CAAC1B,EAAE,EAAE;QACnDmB,KAAK,CAACN,eAAe,GAAGY,MAAM,CAACC,OAAO;MACxC;IACF,CAAC,CAAC,CACDJ,OAAO,CAAChB,qBAAqB,CAACkB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAC3DN,KAAK,CAACL,aAAa,GAAGW,MAAM,CAACC,OAAO;IACtC,CAAC,CAAC,CACDM,UAAU,CACRP,MAAM,IAAKA,MAAM,CAACQ,IAAI,CAACC,QAAQ,CAAC,WAAW,CAAC,EAC7C,CAACf,KAAK,EAAEM,MAAM,KAAK;MACjBN,KAAK,CAACJ,MAAM,GAAG,QAAQ;MACvBI,KAAK,CAACH,KAAK,GAAGS,MAAM,CAACT,KAAK,CAACmB,OAAO;IACpC,CACF,CAAC;EACL;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEjB;AAAqB,CAAC,GAAGR,aAAa,CAAC0B,OAAO;AAC7D,eAAe1B,aAAa,CAAC2B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}